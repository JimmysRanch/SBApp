name: Prod Rollout

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Must be production"
        required: true
        default: "production"
      confirm_prod:
        description: "Type YES to confirm"
        required: true
        default: "NO"

env:
  ROLLOUT_TIMESTAMP: ${{ github.run_id }}-${{ github.run_number }}

jobs:
  prod:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Validate inputs
        run: |
          if [ "${{ github.event.inputs.env }}" != "production" ]; then
            echo "env must be production"; exit 1;
          fi
          if [ "${{ github.event.inputs.confirm_prod }}" != "YES" ]; then
            echo "confirm_prod must be YES"; exit 1;
          fi
          echo "Inputs validated."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Supabase CLI
        run: |
          npm install -g supabase@latest
          supabase --version

      - name: Write Supabase config
        run: |
          mkdir -p supabase
          echo "project_id = \"${{ secrets.SUPABASE_PROJECT_REF }}\"" > supabase/config.toml
          echo "Supabase config written."

      - name: DB Push (migrations)
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN || secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          supabase --version
          supabase db push || { echo "db push failed"; exit 1; }

      - name: Install runtime deps
        run: |
          npm install @supabase/supabase-js ts-node typescript

      - name: Smoke test
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          if [ ! -f scripts/prod_smoke.ts ]; then
            echo "scripts/prod_smoke.ts missing"; exit 1;
          fi
          npx ts-node scripts/prod_smoke.ts > smoke-results.json
          echo "Smoke test complete."

      - name: Summarize
        run: |
          {
            echo "## Rollout Summary"
            echo
            echo "**Run ID:** $GITHUB_RUN_ID"
            echo "**Timestamp (UTC):** $(date -u)"
            echo
            echo "### Smoke Test JSON (truncated)"
            echo '```json'
            head -n 120 smoke-results.json || true
            echo '```'
          } > summary.md

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prod-rollout-${{ env.ROLLOUT_TIMESTAMP }}
          path: |
            smoke-results.json
            summary.md
